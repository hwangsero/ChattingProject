plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.clone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

allprojects {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java'
	apply plugin: 'idea'

	repositories {
		mavenCentral()
		maven { url "https://repo1.maven.org/maven2" }
		maven { url 'https://plugins.gradle.org/m2/' }
	}
}
subprojects { it ->
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		//웹소켓 관련 dependency
		implementation 'org.springframework.boot:spring-boot-starter-websocket'
		//jwt
		compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

		compile('org.modelmapper:modelmapper:1.1.0')
		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		runtimeOnly 'com.h2database:h2'
		runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}
}
test {
	useJUnitPlatform()
}

project(':api') {
	dependencies {
		compile project(':core')
	}
}
